- init(initialize) : 초기화
- git init : git을 본격적으로 사용하기 위해 초기 세팅하다.
    a. git 명령어를 입력한 뒤에야 다른 git 입력이 가능해짐
    b. 프로젝트 시작 전 딱 한 번만 입력하면 됨(여러 번 입력해도 문제가 되진 않음)
    c. 정확한 프로젝트 폴더(경로)에서 입력해야 함(잘못하면 데스크탑 전체 파일, 폴더가 다 기록됨)

- git init 명령어를 입력하면 .git이라는 폴더가 생성되는데, 이 폴더에서 코드 변경점을 계속하고 기록하고 있음
- git 폴더 지우는 명령어 : rm -rf .git

- 코드를 저장하는 명령어 : git add & git commit
    1. git add 파일명
    2. git commit -m "메세지 작성"(메세지 부분은 내가 무슨 코드를 짰는지 자세하게 적는 것이 좋음)
    3. 왜 저장하는 명령어가 2개인가?
        a. git add는 저장하기 전 저장할 파일을 지정
        b. git commit은 실제로 저장하는 명령어

- 저장 여부 확인하는 명령어 : git status
    a. 코드의 변경은 있지만 저장은 하지 않은 파일이 존재할 경우, modified로 표시
    b. 더 이상 저장할 것이 없는 경우 nothing to commit으로 표시
    c. git add .을 한 후 git status를 입력하면 초록색 글씨로 바뀌며 커밋할 준비가 됨을 나타냄

- 변경한 파일이 많은 경우 : 'git add .' 사용

- 저장 내역을 확인하는 명령어 : git log
    a. 커밋 메시지로 코드 변경점 추측 가능

- 이상하게 나열된 숫자와 영어의 조합 : 커밋 아이디
    a. 커밋 아이디와 git diff 명령어로 코드 변경점을 확인할 수 있음
    b. 커밋 아이디와 git reset 명령어로 과거로 돌아갈 수 있음